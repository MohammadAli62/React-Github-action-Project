name: Deploy React App to AWS
on:
  push:
    branches: [ test-sql ]
jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # Step 1: Checkout the source code
      - name: Checkout source
        uses: actions/checkout@v3

      # Step 2: Configure AWS credentials
      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v3
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: 'us-east-1'

      # Step 3: Login to Amazon ECR
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1
        with:
          mask-password: 'true'

      # Step 4: Build, tag, and push Docker image to Amazon ECR
      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
          IMAGE_TAG: ${{ github.sha }}
          REPOSITORY: react-app-example
        run: |
          # Create a Dockerfile for NGINX to serve the React app
          echo "FROM nginx:alpine" > Dockerfile
          echo "COPY ./build /usr/share/nginx/html" >> Dockerfile
          echo "EXPOSE 80" >> Dockerfile
          echo "CMD [\"nginx\", \"-g\", \"daemon off;\"]" >> Dockerfile

          # Build and push the Docker image
          docker build -t $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG
          echo "image=$ECR_REGISTRY/$REPOSITORY:$IMAGE_TAG" >> $GITHUB_OUTPUT

      # Step 5: Update ECS service with the new image
      - name: Update ECS service
        uses: aws-actions/amazon-ecs-deploy-task-definition@v1
        with:
          service: react-app-service
          cluster: DevCluster1
          wait-for-service-stability: true
          image: ${{ steps.build-image.outputs.image }}

      # Step 6: Force a new deployment to replace old containers
      - name: Force ECS Deployment
        run: |
          aws ecs update-service \
            --cluster DevCluster1 \
            --service react-app-service \
            --force-new-deployment
